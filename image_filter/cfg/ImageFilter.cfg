#!/usr/bin/env python
PACKAGE = "image_filter"

import roslib;roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

#detectors_enum = gen.enum([ gen.const("SIFT", int_t, 0, "SIFT"),
                  #gen.const("SIFTGPU", int_t, 1, "SIFTGPU"),
                  #gen.const("SURF", int_t, 2, "SURF"),
                  #gen.const("FAST", int_t, 3, "FAST"),
                  #gen.const("FAST_grid", int_t, 4, "FAST"),
                  #gen.const("MSER", int_t, 5, "MSER"),
                  #gen.const("ORB", int_t, 6, "ORB"),
                  #gen.const("STAR", int_t, 7, "STAR"),],
                  #"Feature Detectors")
#gen.add("feature_detector", int_t, 0, "Feature Detector", 0, 0, 6, edit_method=detectors_enum)

#gen.add("descriptor_matcher", int_t, 0, "Descriptor matcher", 0, 0, 4, edit_method=matchers_enum)
#gen.add("feature_detector_parameter_name", str_t, 0, "Enter the name of a algorithm parameter to change", "nFeatures")
#gen.add("reduce_search_area", bool_t, 0, "only searches in the same place of the image for a match", True)
#gen.add("max_radius_search_dist", double_t, 0, "radius search threshold", .5, 0, 2000)

gen.add("comparison_threshold", int_t, 0, "comparison_threshold", 100, 0, 255)
gen.add("percentage_corruption", double_t, 0, "percentage_corruption", .05, 0, 100)

gen.add("median_filter_size", int_t, 0, "median_filter_size", 9, 0, 50)

gen.add("bilat_d", int_t, 0, "bilat_d", 1, 0, 21)
gen.add("bilat_sigma_color", double_t, 0, "bilat_sigma_color", .05, 0, 100)
gen.add("bilat_sigma_space", double_t, 0, "bilat_sigma_space", .05, 0, 100)

gen.add("gauss_d", int_t, 0, "gauss_d", 1, 0, 21)

gen.add("line_difference_threshold", int_t, 0, "line_difference_threshold", 400, 0, 800)

exit(gen.generate(PACKAGE, "image_filter", "ImageFilter"))
